"""
Django settings for tp2_project project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
import os  # Make sure to import os at the beginning
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-swv506zbbo1_ur&2c)1ig536tm-l%s)l%o%mk8u)drf4dwro%c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
      'backend',
       'rest_framework',
         'rest_framework.authtoken',
         'drf_yasg',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tp2_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS' : [os.path.join(BASE_DIR, "templates/backend_tp2")],

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tp2_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
       'OPTIONS': {
        'read_default_file': os.path.join(BASE_DIR, "my.cnf"),
       }
       }
}

STATICFILES_DIRS = [os.path.join(BASE_DIR), "static"]
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# settings.py
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # Utilisation de JWT
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # Tous les accès nécessitent un jeton
    ],
}
# Pour désactiver l'authentification par session (si tu ne veux pas l'utiliser)
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Enlever si tu ne veux pas la session

# Désactiver les cookies de session
SESSION_COOKIE_AGE = 0

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=2),  # Jeton valide pendant 2 heures
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),  # Jeton de rafraîchissement valide 1 jour
    'ROTATE_REFRESH_TOKENS': True,  # Permet le renouvellement automatique des jetons de rafraîchissement
    'BLACKLIST_AFTER_ROTATION': True,  # Empêche l'utilisation des anciens jetons de rafraîchissement
    'ALGORITHM': 'HS256',  # Algorithme utilisé pour signer les jetons
    'SIGNING_KEY': SECRET_KEY,  # Clé utilisée pour signer les jetons (par défaut SECRET_KEY de Django)
    'AUTH_HEADER_TYPES': ('Bearer',),  # Type d'en-tête (utilisation de "Bearer")
}

# Configuration pour Swagger - DRF-YASG
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'BearerAuth': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization',
        }
    },
    'USE_SESSION_AUTH': False,  # Désactive l'authentification par session si utilisée
}
# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Si vous utilisez des sessions dans une base de données
SESSION_COOKIE_AGE = 3600  # Durée de la session (en secondes)
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Si vous ne voulez pas que la session expire à la fermeture du navigateur